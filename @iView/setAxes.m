function setAxes(obj)

iAxesPerView = 1 + double(strcmp(obj.Mode, '3D'))*2;

iFirstAxesInd = (obj.Ind - 1)*iAxesPerView + 1;
iNTotalAxes = prod(obj.hParent.iAxes);
iRemainingAxes = iNTotalAxes - iFirstAxesInd + 1;
iThisAxes = min(iAxesPerView, iRemainingAxes);

iNExistingAxes = length(obj.hA);

if iNExistingAxes > iThisAxes
    delete(obj.hA(iThisAxes + 1:iNExistingAxes));
    obj.hA = obj.hA(1:iThisAxes); % Remove invalid handles
    obj.hI = obj.hI(1:iThisAxes); % Remove invalid handles
    obj.hS = obj.hS(1:iThisAxes); % Remove invalid handles
elseif iNExistingAxes < iThisAxes
    
    for iI = iNExistingAxes + 1:iThisAxes
        % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        % View axes and its children
        obj.hA(iI) = axes(...
            'Parent'            , obj.hParent.hF, ...
            'Layer'             , 'top', ...
            'Units'             , 'pixels', ...
            'Color'             , 'k', ...
            'FontSize'          , 12, ...
            'XTickMode'         , 'manual', ...
            'YTickMode'         , 'manual', ...
            'XColor'            , obj.hParent.dHIGHLIGHTCOLOR, ...
            'YColor'            , obj.hParent.dHIGHLIGHTCOLOR, ...
            'XTickLabelMode'    , 'manual', ...
            'YTickLabelMode'    , 'manual', ...
            'XAxisLocation'     , 'top', ...
            'YDir'              , 'reverse', ...
            'Box'               , 'on', ...
            'HitTest'           , 'on', ...
            'XGrid'             , 'off', ...
            'YGrid'             , 'off', ...
            'XMinorGrid'        , 'off', ...
            'YMinorGrid'        , 'off');
        hold on
        
        try set(obj.hA(iI), 'YTickLabelRotation', 90); end
        uistack(obj.hA(iI), 'bottom');
        
        obj.hI(iI) = image( ...
            'Parent'                , obj.hA(iI), ...
            'CData'                 , zeros(1, 1, 3), ...
            'HitTest'               , 'off');
        
        %             obj.hL = line('XData', [0 10], 'YData', [0 10], 'LineWidth', 5);
        
        obj.hS(iI) = scatter(1, 1, 12^2, 's', ...
            'Parent'                , obj.hA(iI), ...
            'MarkerEdgeColor'       , 'none', ...
            'MarkerFaceColor'       , obj.dColor, ...
            'Visible'               , 'on', ...
            'Hittest'               , 'off');
%         drawnow
        
        iColor = uint8([obj.dColor'; 0.5] * 255);
        set(obj.hS(iI).MarkerHandle, 'FaceColorBinding', 'interpolated', 'FaceColorData', iColor);
    end
end