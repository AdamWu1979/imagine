function createGUIElements(obj)

% -------------------------------------------------------------------------
% Get defaults and load preferences from file
sMFilePath = [fileparts(mfilename('fullpath')), filesep];

% -------------------------------------------------------------------------
% Read the preferences from the save file and determine figure size

% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
% Default size: 256 x 512
iScreenSize = get(0, 'ScreenSize');
iPosition = [iScreenSize(3) - 300, 100, 256, 512];

% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
% Read saved preferences from file
if exist([sMFilePath, 'Settings.mat'], 'file')
  load([sMFilePath, 'Settings.mat']);
  % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  % Make sure the figure fits on the screen
  if (S.iPosition(1) + S.iPosition(3) < iScreenSize(3)) && ...
      (S.iPosition(2) + S.iPosition(4) < iScreenSize(4))
    iPosition = S.iPosition;
  end
end
% -------------------------------------------------------------------------

% -------------------------------------------------------------------------
% Create the main figure
obj.hF = figure(...
  'Position'              , iPosition, ...
  'Visible'               , 'off', ...
  'BusyAction'            , 'cancel', ...
  'Interruptible'         , 'off', ...
  'Units'                 , 'pixels', ...
  'Renderer'              , 'opengl', ...
  'Color'                 , [0.15 0.15 0.15], ...
  'Colormap'              , gray(256), ...
  'MenuBar'               , 'none', ...
  'NumberTitle'           , 'off', ...
  'Name'                  , 'IMAGINE Data Window', ...
  'ResizeFcn'             , @obj.resize, ...
  'CloseRequestFcn'       , @obj.close, ...
  'WindowButtonMotionFcn' , @obj.mouseMove);
% -------------------------------------------------------------------------


% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
% The bar at the top
obj.hA = axes(...
  'Units'             , 'pixels', ...
  'YDir'              , 'reverse', ...
  'Hittest'           , 'off', ...
  'XColor'            , obj.hImagine.dHIGHLIGHTCOLOR, ...
  'XTick'             , [], ...
  'Visible'           , 'off');
hold on

obj.hI = image(...
  ...'CData'             , repmat(permute(...
  ...                        obj.hImagine.dBGCOLOR'*(0.95 + 0.05.*rand(1, 96)),...
  ...                        [2 3 1]), [1 2 1]), ...
  'CData'             , 0, ...
  'XData'             , [1, 1000], ...
  'YData'             , [1, 64]);

obj.hSlider = iSlider( ...
  'Parent'            , obj.hA, ...
  'Name'              , 'Opacity', ...
  'Lim'               , [0 100], ...
  'Value'             , 100, ...
  'Format'            , '%d %%', ...
  'Position'          , [12, 16, 200, 10], ...
  'Callback'          , @obj.updateData);

dIcons = obj.getOrientIcons(32);
obj.hC(1) = iComboBox( ...
  'Parent'            , obj.hA, ...
  'Imgs'              , dIcons, ...
  'Position'          , [12, 30], ...
  'Callback'          , @obj.updateData);

dIcons = obj.getTypeIcons(32);
obj.hC(2) = iComboBox( ...
  'Parent'            , obj.hA, ...
  'Imgs'              , dIcons, ...
  'Position'          , [100, 30], ...
  'Callback'          , @obj.updateData);

dIcons = obj.getColormapIcons(32, obj.hImagine.SColormaps);
obj.hC(3) = iComboBox( ...
  'Parent'            , obj.hA, ...
  'Imgs'              , dIcons, ...
  'Position'          , [200, 30], ...
  'Callback'          , @obj.updateData);